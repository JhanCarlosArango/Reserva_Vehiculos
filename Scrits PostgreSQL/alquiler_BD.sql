-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
CREATE DATABASE alquiler;

\c alquiler;

BEGIN;


CREATE TABLE IF NOT EXISTS public.caja_cambios
(
    id_caja_cambios serial NOT NULL,
    tipo_caja_cambios character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_caja_cambios PRIMARY KEY (id_caja_cambios)
);

CREATE TABLE IF NOT EXISTS public.categoria
(
    id_categoria serial NOT NULL,
    tipo_vehiculo character varying(45) COLLATE pg_catalog."default",
    costo numeric(10, 2),
    ruta_imagen character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_categoria PRIMARY KEY (id_categoria)
);

CREATE TABLE IF NOT EXISTS public.danios_vehiculo
(
    id_danio serial NOT NULL,
    danio character varying(50) COLLATE pg_catalog."default",
    valor_danio numeric(10, 2),
    CONSTRAINT pk_id_danio PRIMARY KEY (id_danio)
);

CREATE TABLE IF NOT EXISTS public.empresa
(
    nit integer NOT NULL,
    nombre_empresa character varying(45) COLLATE pg_catalog."default",
    email character varying(45) COLLATE pg_catalog."default",
    telefono character varying(45) COLLATE pg_catalog."default",
    logo character varying(150) COLLATE pg_catalog."default",
    direccion character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT pk_nit PRIMARY KEY (nit)
);

CREATE TABLE IF NOT EXISTS public.espec_vehiculo
(
    id_espec_vehiculo serial NOT NULL,
    modelo character varying(30) COLLATE pg_catalog."default",
    color character varying(45) COLLATE pg_catalog."default",
    num_chasis character varying(30) COLLATE pg_catalog."default" NOT NULL,
    modelo_motor character varying(30) COLLATE pg_catalog."default",
    cilindraje character varying(30) COLLATE pg_catalog."default",
    fk_id_tipo_combustible integer,
    CONSTRAINT pk_num_chasis PRIMARY KEY (num_chasis)
);

COMMENT ON CONSTRAINT pk_num_chasis ON public.espec_vehiculo
    IS 'primary_key_num_chasis';

CREATE TABLE IF NOT EXISTS public.marca
(
    id_marca serial NOT NULL,
    nombre_marca character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_marca PRIMARY KEY (id_marca)
);

CREATE TABLE IF NOT EXISTS public.persona
(
    num_documento integer NOT NULL,
    primer_nombre character varying(45) COLLATE pg_catalog."default",
    segundo_nombre character varying(45) COLLATE pg_catalog."default",
    primer_apellido character varying(45) COLLATE pg_catalog."default",
    segundo_apellido character varying(45) COLLATE pg_catalog."default",
    num_telefonico character varying(25) COLLATE pg_catalog."default",
    fk_id_tipo_doc integer,
    correo character varying(40) COLLATE pg_catalog."default",
    CONSTRAINT pk_num_documento PRIMARY KEY (num_documento)
);

CREATE TABLE IF NOT EXISTS public.pet_reserva
(
    id_pet_reserva serial NOT NULL,
    fecha_ini date,
    fecha_fin date,
    hora_ini character varying(20) COLLATE pg_catalog."default",
    hora_fin character varying(20) COLLATE pg_catalog."default",
    estado character varying(15) COLLATE pg_catalog."default" NOT NULL DEFAULT 'wait'::character varying,
    fk_id_categoria integer,
    fk_id_usuario integer,
    fk_id_ubicacion_ini integer,
    fk_id_ubicacion_fin integer,
    costo numeric(15, 2),
    CONSTRAINT pk_id_pet_reserva PRIMARY KEY (id_pet_reserva)
);

CREATE TABLE IF NOT EXISTS public.reporte_danio
(
    id_reporte_danio serial NOT NULL,
    fk_id_danio integer,
    fk_id_reporte integer NOT NULL,
    CONSTRAINT id_reporte_danio PRIMARY KEY (id_reporte_danio, fk_id_reporte)
);

CREATE TABLE IF NOT EXISTS public.reporte_entrega
(
    id_reporte serial NOT NULL,
    fecha_entrega date,
    hora_entrega character varying(25) COLLATE pg_catalog."default",
    fk_num_placa character varying(20) COLLATE pg_catalog."default",
    fk_id_ubicacion integer,
    CONSTRAINT pk_id_reporte PRIMARY KEY (id_reporte)
);

CREATE TABLE IF NOT EXISTS public.reserva
(
    id_reserva serial NOT NULL,
    acep_fecha date,
    estado_reserva character varying(20) COLLATE pg_catalog."default" DEFAULT 'activa'::character varying,
    valor_reserva numeric(10, 2),
    fk_id_pet_reserva integer,
    fk_num_placa character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_reserva PRIMARY KEY (id_reserva)
);

CREATE TABLE IF NOT EXISTS public.rol
(
    id_rol serial NOT NULL,
    tipo_rol character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_rol PRIMARY KEY (id_rol)
);

CREATE TABLE IF NOT EXISTS public.tipo_combustible
(
    id_tipo_combustible serial NOT NULL,
    tipo_combustible character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_tipo_combustible PRIMARY KEY (id_tipo_combustible)
);

CREATE TABLE IF NOT EXISTS public.tipo_direccion
(
    id_tipo_direccion serial NOT NULL,
    tipo_direccion character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_tipo_direccion PRIMARY KEY (id_tipo_direccion)
);

CREATE TABLE IF NOT EXISTS public.tipo_doc
(
    id_tipo_doc serial NOT NULL,
    tipo_documento character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_tipo_doc PRIMARY KEY (id_tipo_doc)
);

CREATE TABLE IF NOT EXISTS public.ubicacion
(
    id_ubicacion integer NOT NULL,
    nombre_barrio character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_id_ubicacion PRIMARY KEY (id_ubicacion)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario serial NOT NULL,
    usuario character varying(40) COLLATE pg_catalog."default",
    contrasenia character varying(40) COLLATE pg_catalog."default",
    fk_num_documento integer,
    CONSTRAINT pk_id_usuario PRIMARY KEY (id_usuario)
);

CREATE TABLE IF NOT EXISTS public.usuario_rol
(
    fk_id_usuario integer NOT NULL,
    fk_id_rol integer NOT NULL,
    CONSTRAINT pk_usuario_rol PRIMARY KEY (fk_id_usuario, fk_id_rol)
);

CREATE TABLE IF NOT EXISTS public.vehiculo
(
    num_placa character varying(20) COLLATE pg_catalog."default" NOT NULL,
    capacidad_pasajeros integer,
    capacidad_carga character varying(25) COLLATE pg_catalog."default",
    fk_id_categoria integer,
    fk_id_tipo_direccion integer,
    fk_id_caja_cambios integer,
    fk_id_marca integer,
    fk_num_chasis character varying(30) COLLATE pg_catalog."default",
    estado character varying(15) COLLATE pg_catalog."default" DEFAULT 'Bueno'::character varying,
    CONSTRAINT pk_num_placa PRIMARY KEY (num_placa)
);

ALTER TABLE IF EXISTS public.espec_vehiculo
    ADD CONSTRAINT fk_id_tipo_combustible FOREIGN KEY (fk_id_tipo_combustible)
    REFERENCES public.tipo_combustible (id_tipo_combustible) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.persona
    ADD CONSTRAINT fk_id_tipo_doc FOREIGN KEY (fk_id_tipo_doc)
    REFERENCES public.tipo_doc (id_tipo_doc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pet_reserva
    ADD CONSTRAINT fk_id_categoria FOREIGN KEY (fk_id_categoria)
    REFERENCES public.categoria (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pet_reserva
    ADD CONSTRAINT fk_id_usuario FOREIGN KEY (fk_id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reporte_danio
    ADD CONSTRAINT fk_id_danio FOREIGN KEY (fk_id_danio)
    REFERENCES public.danios_vehiculo (id_danio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reporte_danio
    ADD CONSTRAINT fk_id_reporte FOREIGN KEY (fk_id_reporte)
    REFERENCES public.reporte_entrega (id_reporte) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reporte_entrega
    ADD CONSTRAINT fk_id_ubicacion FOREIGN KEY (fk_id_ubicacion)
    REFERENCES public.ubicacion (id_ubicacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reporte_entrega
    ADD CONSTRAINT fk_num_placa FOREIGN KEY (fk_num_placa)
    REFERENCES public.vehiculo (num_placa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reserva
    ADD CONSTRAINT fk_id_pet_reserva FOREIGN KEY (fk_id_pet_reserva)
    REFERENCES public.pet_reserva (id_pet_reserva) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fk_num_documento FOREIGN KEY (fk_num_documento)
    REFERENCES public.persona (num_documento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario_rol
    ADD CONSTRAINT fk_id_rol FOREIGN KEY (fk_id_rol)
    REFERENCES public.rol (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario_rol
    ADD CONSTRAINT fk_id_usuario FOREIGN KEY (fk_id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vehiculo
    ADD CONSTRAINT fk_id_caja_cambios FOREIGN KEY (fk_id_caja_cambios)
    REFERENCES public.caja_cambios (id_caja_cambios) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vehiculo
    ADD CONSTRAINT fk_id_categoria FOREIGN KEY (fk_id_categoria)
    REFERENCES public.categoria (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vehiculo
    ADD CONSTRAINT fk_id_marca FOREIGN KEY (fk_id_marca)
    REFERENCES public.marca (id_marca) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vehiculo
    ADD CONSTRAINT fk_id_tipo_direccion FOREIGN KEY (fk_id_tipo_direccion)
    REFERENCES public.tipo_direccion (id_tipo_direccion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vehiculo
    ADD CONSTRAINT fk_num_chasis FOREIGN KEY (fk_num_chasis)
    REFERENCES public.espec_vehiculo (num_chasis) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_fk_num_chasis
    ON public.vehiculo(fk_num_chasis);

END;

insert into ubicacion(id_ubicacion, nombre_barrio)
values (1, 'La Libertad'),
(2, 'Jesus Angel Gozales'),
(3, 'Buenos Aires Bajos'),
(4, 'El Mirador'),
(5, 'Andes Bajo'),
(6, 'La Normal'),
(7, 'Incoder'),
(8, 'San Judas'),
(9, 'Seminario Menor'),
(10, 'Brisas Altas'),
(11, 'Vivienda Militar'),
(12, 'El Raicero'),
(13, 'Ana Clarisa'),
(14, 'Portal de Nazareth'),
(15, 'Juan XXIII'),
(16, 'Acolsure'),
(17, 'Palmeras Altas'),
(18, 'La Gloria'),
(19, 'Puente Lopez');

INSERT INTO tipo_doc (tipo_documento) VALUES ('Cedula');
INSERT INTO tipo_doc (tipo_documento) VALUES ('CC Extranjera');


INSERT INTO categoria (tipo_vehiculo, costo, ruta_imagen) VALUES ('Automóvil', 93000,'/images/vehiculo1.png');
INSERT INTO categoria (tipo_vehiculo, costo, ruta_imagen) VALUES ('Camióneta', 123000,'/images/vehiculo2.png');
INSERT INTO categoria (tipo_vehiculo, costo, ruta_imagen) VALUES ('Motocicleta Baja CC', 45000,'/images/moto1.png');
INSERT INTO categoria (tipo_vehiculo, costo, ruta_imagen) VALUES ('Motocicleta Media CC', 70000,'/images/moto2.png');
INSERT INTO categoria (tipo_vehiculo, costo, ruta_imagen) VALUES ('Motocicleta Alta CC', 100000,'/images/moto3.png');
INSERT INTO categoria (tipo_vehiculo, costo, ruta_imagen) VALUES ('Depotivo', 320000,'/images/vehiculo3.png');

INSERT INTO pet_reserva (fecha_ini, fecha_fin, hora_ini, hora_fin)
VALUES ('2024-05-01', '2024-05-01', '10:00:00', '12:00:00');

insert into rol(tipo_rol)values('Administrador');
insert into rol(tipo_rol)values('Proveerdor');
insert into rol(tipo_rol)values('Cliente');



INSERT INTO persona (num_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, num_telefonico,fk_id_tipo_doc, correo) 
VALUES (117987265, 'Jhan', 'Carlos', 'Arango', 'Usuga', '3214905699',1,'jh.arango@udla.edu.co');
INSERT INTO persona (num_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, num_telefonico,fk_id_tipo_doc, correo) 
VALUES (117987269, 'Manuel', 'David', 'Rivera', 'Gomez', '112',2,'manuelrigo2024@gmail.com');

insert into usuario(usuario,contrasenia, fk_num_documento) values('arango','root',117987265);
insert into usuario(usuario,contrasenia, fk_num_documento) values('manuel','root',117987269);

insert into usuario_rol (fk_id_usuario,fk_id_rol) values(1,1);
insert into usuario_rol (fk_id_usuario,fk_id_rol) values(2,2);
insert into usuario_rol (fk_id_usuario,fk_id_rol) values(2,3);

INSERT INTO public.danios_vehiculo(danio, valor_danio) VALUES ('Daño Carroceria', 50000);
INSERT INTO public.danios_vehiculo(danio, valor_danio) VALUES ('Daño Electrico', 70000);
INSERT INTO public.danios_vehiculo(danio, valor_danio) VALUES ('Daño Parabrisas-Retrovisor', 200000);
INSERT INTO public.danios_vehiculo(danio, valor_danio) VALUES ('Daño Interior', 150000);